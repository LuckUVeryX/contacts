// Mocks generated by Mockito 5.0.17 from annotations
// in contacts/test/features/edit_contact/presentation/bloc/edit_contact_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:contacts/core/domain/entities/contact.dart' as _i4;
import 'package:contacts/core/domain/repositories/contacts_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [IContactsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIContactsRepository extends _i1.Mock
    implements _i2.IContactsRepository {
  MockIContactsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i4.Contact>> get contacts =>
      (super.noSuchMethod(Invocation.getter(#contacts),
              returnValue: Stream<List<_i4.Contact>>.empty())
          as _i3.Stream<List<_i4.Contact>>);
  @override
  _i3.Future<void> init() => (super.noSuchMethod(Invocation.method(#init, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  void saveContact(_i4.Contact? contact) =>
      super.noSuchMethod(Invocation.method(#saveContact, [contact]),
          returnValueForMissingStub: null);
  @override
  void deleteContact(int? id) =>
      super.noSuchMethod(Invocation.method(#deleteContact, [id]),
          returnValueForMissingStub: null);
}
